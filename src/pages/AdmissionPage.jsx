import { useQuery } from "@tanstack/react-query";
import React, { useCallback, useMemo, useState } from "react";
import { FaBookOpen, FaCheckCircle } from "react-icons/fa";
import Loader from "../components/Loader";
import Admission from "../features/admission/components/Admission";
import admissionService from "../features/admission/services/admission.services";
import PageTitle from "../utils/PageTitle";

const AdmissionPage = () => {
  const [page, setPage] = useState(1);
  const { isPending, data, isError, error } = useQuery({
    queryKey: ["admissions", page],
    queryFn: () => admissionService.getAll(page),
  });
  const refinedData = useMemo(() => data?.data?.results || [], [data]);
  const hasNext = !!data?.data?.next;
  const hasPrev = !!data?.data?.previous;

  const handleNext = useCallback(() => {
    if (hasNext) setPage((prev) => prev + 1);
  }, [hasNext]);

  const handlePrev = useCallback(() => {
    if (hasPrev && page > 1) setPage((prev) => prev - 1);
  }, [hasPrev, page]);

  return (
    <>
      <PageTitle key={"admissionPage"} title={"ржнрж░рзНрждрж┐"} />
      <section className="max-w-[1144px] w-[95%] mx-auto mt-28 py-4">
        <div className="p-8 rounded-lg bg-gray-700 border border-gray-700 shadow-lg mb-8">
          <h3 className="text-2xl font-semibold flex items-center mb-6 text-blue-300">
            <FaBookOpen className="text-blue-400 mr-3" /> ржнрж░рзНрждрж┐ рж╣ржУрзЯрж╛рж░ ржпрзЛржЧрзНржпрждрж╛
          </h3>

          <ul className="space-y-4">
            {[
              "ржнрж░рзНрждрж┐ рж╕ржВржХрзНрж░рж╛ржирзНржд ржпрзЗржХрзЛржирзЛ ржмрж┐рж╖рзЯрзЗ ржорж╛ржжрзНрж░рж╛рж╕рж╛рж░ ржХрждрзГржкржХрзНрж╖рзЗрж░ рж╕рж╛ржерзЗ ржХржерж╛ ржмрж▓рзБржиред",
              "ржнрж░рзНрждрж┐ ржлрж░ржо ржУ ржнрж░рзНрждрж┐-рж╕ржВржХрзНрж░рж╛ржирзНржд ржЕржирзНржпрж╛ржирзНржп ржХрж╛ржЧржЬржкрждрзНрж░ ржорж╛ржжрзНрж░рж╛рж╕рж╛рж░ ржЕржлрж┐рж╕ ржерзЗржХрзЗ рж╕ржВржЧрзНрж░рж╣ ржХрж░рждрзЗ рж╣ржмрзЗред",
              "ржирждрзБржи ржЫрж╛рждрзНрж░ржжрзЗрж░ ржнрж░рзНрждрж┐ ржкрж░рзАржХрзНрж╖рж╛рзЯ ржЕржмрж╢рзНржпржЗ ржЙрждрзНрждрзАрж░рзНржг рж╣рждрзЗ рж╣ржмрзЗред",
              "ржнрж░рзНрждрж┐рж░ ржмрж┐рж╖рзЯрзЗ ржХрж░рзНрждрзГржкржХрзНрж╖рзЗрж░ рж╕рж┐ржжрзНржзрж╛ржирзНрждржЗ ржЪрзВрзЬрж╛ржирзНржд ржмрж▓рзЗ ржЧржгрзНржп рж╣ржмрзЗред",
              "ржХрж┐рждрж╛ржм ржмрж┐ржнрж╛ржЧрзЗ рззрзжрзж/- ржЯрж╛ржХрж╛ рж╣рж╛рж░рзЗ ржЖржмрж╛рж╕рж┐ржХ ржлрж┐, рж╣рж┐ржлржЬ/ржирж╛ржЬрзЗрж░рж╛ ржмрж┐ржнрж╛ржЧрзЗ рзкрзжрзж/- ржЯрж╛ржХрж╛ ржПржмржВ ржирзВрж░рж╛ржирзА ржмрж┐ржнрж╛ржЧрзЗ ржЖржмрж╛рж╕рж┐ржХ рзйрзжрзж/- ржЯрж╛ржХрж╛ ржУ ржЕржирж╛ржмрж╛рж╕рж┐ржХ рзирзжрзж/- ржЯрж╛ржХрж╛ ржорж╛рж╕рж┐ржХ ржмрзЗрждржи ржкрж░рж┐рж╢рзЛржз ржХрж░рждрзЗ рж╣ржмрзЗред",
              "рждрж╛рж╣ржлрж┐ржЬрзБрж▓ ржХрзЛрж░ржЖржи ржУ ржирж╛ржЬрзЗрж░рж╛ ржмрж┐ржнрж╛ржЧрзЗ ржХрзЛржЯрж╛ ржкрзВрж░ржг рж╕рж╛ржкрзЗржХрзНрж╖рзЗ ржнрж░рзНрждрж┐ ржЪрж▓ржмрзЗред",
              "ржирждрзБржи ржЫрж╛рждрзНрж░ржжрзЗрж░ ржЬржирзНржорж╕ржиржжрзЗрж░ ржлржЯрзЛржХржкрж┐ ржПржмржВ рж╕ржХрж▓ ржЫрж╛рждрзНрж░рзЗрж░ рзз ржХржкрж┐ ржЫржмрж┐ рж╕рж╛ржерзЗ ржЖржирждрзЗ рж╣ржмрзЗред",
              "ржмрж░рзНржбрж┐ржВрзЯрзЗрж░ ржЦрзЛрж░рж╛ржХрж┐рж░ рзирзжрзжрзж/- ржЯрж╛ржХрж╛ ржкрзНрж░рждрж┐ ржЗржВрж░рзЗржЬрж┐ ржорж╛рж╕рзЗрж░ рзл рждрж╛рж░рж┐ржЦрзЗрж░ ржоржзрзНржпрзЗ ржкрж░рж┐рж╢рзЛржз ржХрж░рждрзЗ рж╣ржмрзЗред",
            ].map((item, index) => (
              <li key={index} className="flex items-start text-gray-100">
                <FaCheckCircle className="text-green-400 mt-1 mr-3 flex-shrink-0" />
                <span>{item}</span>
              </li>
            ))}
          </ul>
        </div>

        <h2 className="text-3xl font-bold text-center mb-10 text-blue-300">
          ржнрж░рзНрждрж┐ рж╕ржВржХрзНрж░рж╛ржирзНржд рждржерзНржп
        </h2>

        {!isPending && isError && (
          <div className="bg-red-900/50 text-red-200 p-4 rounded-lg border border-red-700 mt-6">
            {error.message}
          </div>
        )}

        {isPending ? (
          <div className="flex justify-center my-12">
            <Loader />
          </div>
        ) : (
          <div className="overflow-x-auto rounded-lg border border-gray-700 shadow-lg">
            <table className="table-auto w-full border-collapse">
              <thead className="bg-gray-700">
                <tr className="text-left text-gray-200">
                  <th className="border p-4 border-gray-600">рж╢рзНрж░рзЗржгрзА</th>
                  <th className="border p-4 border-gray-600">ржХрзНрж▓рж╛рж╕ рж▓рзЗржнрзЗрж▓</th>
                  <th className="border p-4 border-gray-600 whitespace-nowrap">
                    ржлрж░рзНржо ржлрж┐
                  </th>
                  <th className="border p-4 border-gray-600 whitespace-nowrap">
                    ржирждрзБржи ржнрж░рзНрждрж┐ ржлрж┐
                  </th>
                  <th className="border p-4 border-gray-600 whitespace-nowrap">
                    ржкрзБрж░ржирзЛ ржнрж░рзНрждрж┐ ржлрж┐
                  </th>
                  <th className="border p-4 border-gray-600 whitespace-nowrap">
                    ржирждрзБржи ржорзЛржЯ ржлрж┐
                  </th>
                  <th className="border p-4 border-gray-600 whitespace-nowrap">
                    ржкрзБрж░ржирзЛ ржорзЛржЯ ржлрж┐
                  </th>
                  <th className="border p-4 border-gray-600 whitespace-nowrap">
                    ржЕрждрж┐рж░рж┐ржХрзНржд ржлрж┐
                  </th>
                  <th className="border p-4 border-gray-600 whitespace-nowrap">
                    ржорж╛рж╕рж┐ржХ ржлрж┐
                  </th>
                  <th className="border p-4 border-gray-600 whitespace-nowrap">
                    ржнрж░рзНрждрж┐ рж╢рзБрж░рзБ
                  </th>
                  <th className="border p-4 border-gray-600 whitespace-nowrap">
                    ржнрж░рзНрждрж┐ рж╢рзЗрж╖
                  </th>
                  <th className="border p-4 border-gray-600 whitespace-nowrap">
                    ржжрж░ржХрж╛рж░рж┐ ржбржХрзБржорзЗржирзНржЯ
                  </th>
                  <th className="border p-4 border-gray-600 whitespace-nowrap">
                    рж╕рж┐ржЯрзЗрж░ ржЕржмрж╕рзНржерж╛
                  </th>
                  <th className="border p-4 border-gray-600 whitespace-nowrap">
                    ржкрзНрж░ржХрж╛рж╢рзЗрж░ рждрж╛рж░рж┐ржЦ
                  </th>
                  <th className="border p-4 border-gray-600 whitespace-nowrap">
                    ржЖржкржбрзЗржЯрзЗрж░ рждрж╛рж░рж┐ржЦ
                  </th>
                </tr>
              </thead>
              <tbody className="divide-y divide-gray-700">
                {refinedData?.map(
                  ({
                    id,
                    ClassName,
                    class_level,
                    form_fee,
                    new_admission_fee,
                    old_admission_fee,
                    new_total_fee,
                    old_total_fee,
                    additional_fee,
                    monthly_fee,
                    admission_start_date,
                    admission_end_date,
                    required_documents,
                    seat_availability,
                    admission_created,
                    admission_updated,
                  }) => (
                    <Admission
                      key={id}
                      ClassName={ClassName}
                      class_level={class_level}
                      form_fee={form_fee}
                      new_admission_fee={new_admission_fee}
                      old_admission_fee={old_admission_fee}
                      new_total_fee={new_total_fee}
                      old_total_fee={old_total_fee}
                      additional_fee={additional_fee}
                      monthly_fee={monthly_fee}
                      admission_start_date={admission_start_date}
                      admission_end_date={admission_end_date}
                      required_documents={required_documents}
                      seat_availability={seat_availability}
                      admission_created={admission_created}
                      admission_updated={admission_updated}
                    />
                  )
                )}
              </tbody>
            </table>
          </div>
        )}

        <div className="flex justify-between mt-8 gap-5">
          <button
            onClick={handlePrev}
            disabled={!hasPrev}
            className={`px-6 py-2 rounded-lg bg-gray-700 text-gray-200 hover:bg-gray-600 transition-colors ${
              !hasPrev && "opacity-50 cursor-not-allowed"
            }`}
          >
            ЁЯФЩ ржкрзВрж░рзНржмржмрж░рзНрждрзА ржкрж╛рждрж╛
          </button>
          <button
            onClick={handleNext}
            disabled={!hasNext}
            className={`px-6 py-2 button1 rounded-lg bg-blue-700 text-white hover:bg-blue-600 transition-colors ${
              !hasNext && "opacity-50 cursor-not-allowed"
            }`}
          >
            ржкрж░ржмрж░рзНрждрзА ржкрж╛рждрж╛ тЮбя╕П
          </button>
        </div>
      </section>
    </>
  );
};

export default AdmissionPage;